<fieldset id="dropzone_fileupload_<%= model.tableize%>">
  <legend>
    <%= model %>
    <span class="btn btn-success btn-sm fileinput-button">
        <span>Upload <%= model %> Image</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload_<%= model.tableize%>" type="file" name="asset">
    </span>
  </legend>
  <div class="form-group">
    <!-- The container for the uploaded files -->
    <div id="files_<%= model.tableize%>" class="files"></div>
    <!-- The global progress bar -->
    <div id="progress_<%= model.tableize%>" class="hide progress <%= model.tableize%>">
        <div class="progress-bar progress-bar-success"></div>
    </div>

    <div id="<%= model.downcase %>" class="<%= model.downcase %>">
      <%= image_tag @website.try(model.downcase).asset(style) if @website.try(model.downcase).present? %>
    </div>
    <%# link_to 'Remove Logo', logo_path(@website.logo), method: :delete, class: 'btn btn-danger', remote: true if @website.logo.asset.present? %>
  </div>

  <script type="text/javascript">
    /*jslint unparam: true */
    /*global window, $ */
    $(function () {
      'use strict';
      // Change this to the location of your server-side upload handler:
      $('#fileupload_<%= model.tableize%>').fileupload({
        dataType: 'script',
        dropZone: $('#dropzone_fileupload_<%= model.tableize%>'),
        url: '/<%= model.tableize %>/<%= @website.try(model.downcase).present? ? @website.try(model.downcase).id : "" %>',
        type: '<%= @website.try(model.downcase).present? ? "PUT" : "POST" %>',
        multipart: true,
        add: function(e, data){
          data.formData = {};
          <% if @website.try(model.downcase).present? %>
            data.formData.id = <%= @website.try(model.downcase).id %>;
          <% end %>
          data.formData.attachable_id = <%= @website.id %>;
          data.formData.attachable_type = 'Website';
          <%= "data.formData.id = #{@website.try(model.downcase).id;}" if @website.try(model.downcase).present? %>
          var file, types;
          types = /(\.|\/)(gif|jpe?g|png)$/i;
          file = data.files[0];
          if (types.test(file.type) || types.test(file.name)) {
            data.context = $('<div>' + file.name + '</div>');
            $('#files_<%= model.tableize%>').append(data.context);
            return data.submit();
          } else {
            return alert(file.name + " is not a gif, jpeg, or png image file");
          }
        },
        progress: function(e, data) {
          var progress;
          if(data.context) {
            progress = parseInt(data.loaded / data.total * 100, 10);
            $('.progress.<%= model.tableize%>').removeClass('hide');
            return $('.progress.<%= model.tableize%> .progress-bar').css('width', progress + '%');
            console.log(progress);
          }
        },
        done: function(e, data){
          if (data.context) {
            console.log('done')
            return data.context.remove();
          }
        }
      });
    });
  </script>

</fieldset>
